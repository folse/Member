# -*- coding: utf-8 -*- import MySQLdbfrom flask import request, session, g, redirect, url_for, \     abort, render_template, flashfrom config import DB_HOSTfrom config import DATABASEfrom config import USERfrom config import PASSWDfrom app import app# define database connectiondef connect_db():    return MySQLdb.connect(host=DB_HOST,user=USER,passwd=PASSWD,db=DATABASE,charset="utf8")    # Database connection configure@app.before_requestdef before_request():    g.db = connect_db()@app.teardown_requestdef teardown_request(exception):    g.db.close()# define URL route@app.route('/')def index():    return redirect(url_for('login'))@app.route('/login', methods=['GET', 'POST'])def login():    # query user_name    c1 = g.db.cursor()    sql_u = 'select username from user'    c1.execute(sql_u)    # query password    c2 = g.db.cursor()    sql_p = 'select password from user'    c2.execute(sql_p)    error = None    if request.method == 'POST':        if request.form['username'] not in ["%s" % row[0] for row in c1.fetchall()]:            flash(unicode(str("用户名无效"),"UTF8"))         elif request.form['password'] not in ["%s" % row[0] for row in c2.fetchall()]:            flash(unicode(str("密码无效"),"UTF8"))        else:            session['logged_in'] = True            flash(request.form['username'])            return redirect(url_for('show_guest'))    return render_template('login.html', error=error)    @app.route('/logout')def logout():    session.pop('logged_in', None)    flash(unicode(str("未登录"),"UTF8"))    return redirect(url_for('login'))@app.route('/coffee_event', methods=['GET', 'POST'])def coffee_event():    error = None    if request.method == 'POST':        c = g.db.cursor()        if request.form['name'].strip() == '':            flash(unicode(str("额,没看到姓名"),"UTF8"))         elif request.form['phone'].strip() == '':            flash(unicode(str("额,没看到手机号"),"UTF8"))        elif request.form['school'].strip() == '':            flash(unicode(str("额,没看到学校"),"UTF8"))        elif request.form['grade'].strip() == '':            flash(unicode(str("额,没看到年级"),"UTF8"))        else:            c.execute('insert into guest(name,phone,school,grade) values (%s,%s,%s,%s)', (request.form['name'],request.form['phone'],request.form['school'],request.form['grade']))            g.db.commit()            return redirect(url_for('success'))    return render_template('coffee_event.html', error=error)@app.route('/success')def success():    return render_template('success.html')@app.route('/coffee_wechat')def coffee_wechat():    return render_template('coffee_wechat.html')@app.route('/show_guest')def show_guest():    if session.get('logged_in'):        c = g.db.cursor()        sql = 'select id, name, phone, school, grade from guest order by id'        n = c.execute(sql)        guests = [dict(id=row[0],name=row[1],phone=row[2], school=row[3], grade=row[4]) for row in c.fetchall()]        return render_template('show_guest.html', guests=guests)    else:        flash(unicode(str("请登录后继续"),"UTF8"))        return redirect(url_for('login'))@app.route('/register/', methods=['GET','POST'])def register():    if request.method == 'GET':        return render_template("register.html")    if request.method == 'POST':        u = request.form['username']        p,s = encrypt_password(request.form['password'])        g.db.cursor.execute('INSERT INTO user (name,password,salt) VALUES (%s,%s,%s)',(u,p,s,))        g.db.commit()    return redirect(url_for('signin'))